{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"smart_contracts/solc-js/test/cli.js","filenameRelative":"smart_contracts/solc-js/test/cli.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"smart_contracts/solc-js/test/cli.js.map","sourceFileName":"smart_contracts/solc-js/test/cli.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"cli"},"ignored":false,"code":"var tape = require('tape');\n\nvar spawn = require('tape-spawn');\n\nvar pkg = require('../package.json');\n\ntape('CLI', function (t) {\n  t.test('--version', function (st) {\n    var spt = spawn(st, './solcjs --version');\n    spt.stdout.match(RegExp(pkg.version + '(-[^a-zA-A0-9.+]+)?(\\\\+[^a-zA-Z0-9.-]+)?'));\n    spt.end();\n  });\n  t.test('no parameters', function (st) {\n    var spt = spawn(st, './solcjs');\n    spt.stderr.match(/^Must provide a file/);\n    spt.end();\n  });\n  t.test('no mode specified', function (st) {\n    var spt = spawn(st, './solcjs test/DAO/Token.sol');\n    spt.stdout.match(/^Invalid option selected/);\n    spt.end();\n  });\n  t.test('--bin', function (st) {\n    var spt = spawn(st, './solcjs --bin test/DAO/Token.sol');\n    spt.stderr.empty();\n    spt.succeeds();\n    spt.end();\n  });\n  t.test('invalid file specified', function (st) {\n    var spt = spawn(st, './solcjs --bin test/fileNotFound.sol');\n    spt.stdout.match(/^Error reading /);\n    spt.end();\n  });\n  t.test('--abi', function (st) {\n    var spt = spawn(st, './solcjs --abi test/DAO/Token.sol');\n    spt.stderr.empty();\n    spt.succeeds();\n    spt.end();\n  });\n  t.test('--bin --abi', function (st) {\n    var spt = spawn(st, './solcjs --bin --abi test/DAO/Token.sol');\n    spt.stderr.empty();\n    spt.succeeds();\n    spt.end();\n  });\n});","map":{"version":3,"sources":["smart_contracts/solc-js/test/cli.js"],"names":["tape","require","spawn","pkg","t","test","st","spt","stdout","match","RegExp","version","end","stderr","empty","succeeds"],"mappings":"AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;;AACA,IAAMC,QAAQD,QAAQ,YAAR,CAAd;;AACA,IAAME,MAAMF,QAAQ,iBAAR,CAAZ;;AAEAD,KAAK,KAAL,EAAY,UAAUI,CAAV,EAAa;AACvBA,IAAEC,IAAF,CAAO,WAAP,EAAoB,UAAUC,EAAV,EAAc;AAChC,QAAIC,MAAML,MAAMI,EAAN,EAAU,oBAAV,CAAV;AACAC,QAAIC,MAAJ,CAAWC,KAAX,CAAiBC,OAAOP,IAAIQ,OAAJ,GAAc,0CAArB,CAAjB;AACAJ,QAAIK,GAAJ;AACD,GAJD;AAMAR,IAAEC,IAAF,CAAO,eAAP,EAAwB,UAAUC,EAAV,EAAc;AACpC,QAAIC,MAAML,MAAMI,EAAN,EAAU,UAAV,CAAV;AACAC,QAAIM,MAAJ,CAAWJ,KAAX,CAAiB,sBAAjB;AACAF,QAAIK,GAAJ;AACD,GAJD;AAMAR,IAAEC,IAAF,CAAO,mBAAP,EAA4B,UAAUC,EAAV,EAAc;AACxC,QAAIC,MAAML,MAAMI,EAAN,EAAU,6BAAV,CAAV;AACAC,QAAIC,MAAJ,CAAWC,KAAX,CAAiB,0BAAjB;AACAF,QAAIK,GAAJ;AACD,GAJD;AAMAR,IAAEC,IAAF,CAAO,OAAP,EAAgB,UAAUC,EAAV,EAAc;AAC5B,QAAIC,MAAML,MAAMI,EAAN,EAAU,mCAAV,CAAV;AACAC,QAAIM,MAAJ,CAAWC,KAAX;AACAP,QAAIQ,QAAJ;AACAR,QAAIK,GAAJ;AACD,GALD;AAOAR,IAAEC,IAAF,CAAO,wBAAP,EAAiC,UAAUC,EAAV,EAAc;AAC7C,QAAIC,MAAML,MAAMI,EAAN,EAAU,sCAAV,CAAV;AACAC,QAAIC,MAAJ,CAAWC,KAAX,CAAiB,iBAAjB;AACAF,QAAIK,GAAJ;AACD,GAJD;AAMAR,IAAEC,IAAF,CAAO,OAAP,EAAgB,UAAUC,EAAV,EAAc;AAC5B,QAAIC,MAAML,MAAMI,EAAN,EAAU,mCAAV,CAAV;AACAC,QAAIM,MAAJ,CAAWC,KAAX;AACAP,QAAIQ,QAAJ;AACAR,QAAIK,GAAJ;AACD,GALD;AAOAR,IAAEC,IAAF,CAAO,aAAP,EAAsB,UAAUC,EAAV,EAAc;AAClC,QAAIC,MAAML,MAAMI,EAAN,EAAU,yCAAV,CAAV;AACAC,QAAIM,MAAJ,CAAWC,KAAX;AACAP,QAAIQ,QAAJ;AACAR,QAAIK,GAAJ;AACD,GALD;AAMD,CA7CD","file":"smart_contracts/solc-js/test/cli.js.map","sourcesContent":["const tape = require('tape');\nconst spawn = require('tape-spawn');\nconst pkg = require('../package.json');\n\ntape('CLI', function (t) {\n  t.test('--version', function (st) {\n    var spt = spawn(st, './solcjs --version');\n    spt.stdout.match(RegExp(pkg.version + '(-[^a-zA-A0-9.+]+)?(\\\\+[^a-zA-Z0-9.-]+)?'));\n    spt.end();\n  });\n\n  t.test('no parameters', function (st) {\n    var spt = spawn(st, './solcjs');\n    spt.stderr.match(/^Must provide a file/);\n    spt.end();\n  });\n\n  t.test('no mode specified', function (st) {\n    var spt = spawn(st, './solcjs test/DAO/Token.sol');\n    spt.stdout.match(/^Invalid option selected/);\n    spt.end();\n  });\n\n  t.test('--bin', function (st) {\n    var spt = spawn(st, './solcjs --bin test/DAO/Token.sol');\n    spt.stderr.empty();\n    spt.succeeds();\n    spt.end();\n  });\n\n  t.test('invalid file specified', function (st) {\n    var spt = spawn(st, './solcjs --bin test/fileNotFound.sol');\n    spt.stdout.match(/^Error reading /);\n    spt.end();\n  });\n\n  t.test('--abi', function (st) {\n    var spt = spawn(st, './solcjs --abi test/DAO/Token.sol');\n    spt.stderr.empty();\n    spt.succeeds();\n    spt.end();\n  });\n\n  t.test('--bin --abi', function (st) {\n    var spt = spawn(st, './solcjs --bin --abi test/DAO/Token.sol');\n    spt.stderr.empty();\n    spt.succeeds();\n    spt.end();\n  });\n});\n"]},"hash":"152901e8c69626f6250b4fe02312e9c96ff94b65"}
