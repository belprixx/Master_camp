{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"smart_contracts/solc-js/test/abi.js","filenameRelative":"smart_contracts/solc-js/test/abi.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"smart_contracts/solc-js/test/abi.js.map","sourceFileName":"smart_contracts/solc-js/test/abi.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"abi"},"ignored":false,"code":"var tape = require('tape');\n\nvar abi = require('../abi.js');\n\ntape('ABI translator', function (t) {\n  t.test('Empty ABI', function (st) {\n    st.deepEqual(abi.update('0.4.0', []), []);\n    st.end();\n  });\n  t.test('0.1.1 (no constructor)', function (st) {\n    st.deepEqual(abi.update('0.1.1', []), [{\n      inputs: [],\n      payable: true,\n      type: 'constructor'\n    }, {\n      payable: true,\n      type: 'fallback'\n    }]);\n    st.end();\n  });\n  t.test('0.4.0 (has fallback)', function (st) {\n    var input = [{\n      inputs: [],\n      type: 'constructor'\n    }];\n    st.deepEqual(abi.update('0.4.0', input), [{\n      inputs: [],\n      payable: true,\n      type: 'constructor'\n    }]);\n    st.end();\n  });\n  t.test('0.4.1 (constructor not payable)', function (st) {\n    var input = [{\n      inputs: [],\n      payable: false,\n      type: 'constructor'\n    }];\n    st.deepEqual(abi.update('0.4.1', input), [{\n      inputs: [],\n      payable: true,\n      type: 'constructor'\n    }]);\n    st.end();\n  });\n  t.test('0.4.5 (constructor payable)', function (st) {\n    var input = [{\n      inputs: [],\n      payable: false,\n      type: 'constructor'\n    }];\n    st.deepEqual(abi.update('0.4.5', input), [{\n      inputs: [],\n      payable: false,\n      type: 'constructor'\n    }]);\n    st.end();\n  });\n});","map":{"version":3,"sources":["smart_contracts/solc-js/test/abi.js"],"names":["tape","require","abi","t","test","st","deepEqual","update","end","inputs","payable","type","input"],"mappings":"AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;;AACA,IAAMC,MAAMD,QAAQ,WAAR,CAAZ;;AAEAD,KAAK,gBAAL,EAAuB,UAAUG,CAAV,EAAa;AAClCA,IAAEC,IAAF,CAAO,WAAP,EAAoB,UAAUC,EAAV,EAAc;AAChCA,OAAGC,SAAH,CAAaJ,IAAIK,MAAJ,CAAW,OAAX,EAAoB,EAApB,CAAb,EAAsC,EAAtC;AACAF,OAAGG,GAAH;AACD,GAHD;AAIAL,IAAEC,IAAF,CAAO,wBAAP,EAAiC,UAAUC,EAAV,EAAc;AAC7CA,OAAGC,SAAH,CAAaJ,IAAIK,MAAJ,CAAW,OAAX,EAAoB,EAApB,CAAb,EAAsC,CAAE;AAAEE,cAAQ,EAAV;AAAcC,eAAS,IAAvB;AAA6BC,YAAM;AAAnC,KAAF,EAAsD;AAAED,eAAS,IAAX;AAAiBC,YAAM;AAAvB,KAAtD,CAAtC;AACAN,OAAGG,GAAH;AACD,GAHD;AAIAL,IAAEC,IAAF,CAAO,sBAAP,EAA+B,UAAUC,EAAV,EAAc;AAC3C,QAAIO,QAAQ,CAAE;AAAEH,cAAQ,EAAV;AAAcE,YAAM;AAApB,KAAF,CAAZ;AACAN,OAAGC,SAAH,CAAaJ,IAAIK,MAAJ,CAAW,OAAX,EAAoBK,KAApB,CAAb,EAAyC,CAAE;AAAEH,cAAQ,EAAV;AAAcC,eAAS,IAAvB;AAA6BC,YAAM;AAAnC,KAAF,CAAzC;AACAN,OAAGG,GAAH;AACD,GAJD;AAKAL,IAAEC,IAAF,CAAO,iCAAP,EAA0C,UAAUC,EAAV,EAAc;AACtD,QAAIO,QAAQ,CAAE;AAAEH,cAAQ,EAAV;AAAcC,eAAS,KAAvB;AAA8BC,YAAM;AAApC,KAAF,CAAZ;AACAN,OAAGC,SAAH,CAAaJ,IAAIK,MAAJ,CAAW,OAAX,EAAoBK,KAApB,CAAb,EAAyC,CAAE;AAAEH,cAAQ,EAAV;AAAcC,eAAS,IAAvB;AAA6BC,YAAM;AAAnC,KAAF,CAAzC;AACAN,OAAGG,GAAH;AACD,GAJD;AAKAL,IAAEC,IAAF,CAAO,6BAAP,EAAsC,UAAUC,EAAV,EAAc;AAClD,QAAIO,QAAQ,CAAE;AAAEH,cAAQ,EAAV;AAAcC,eAAS,KAAvB;AAA8BC,YAAM;AAApC,KAAF,CAAZ;AACAN,OAAGC,SAAH,CAAaJ,IAAIK,MAAJ,CAAW,OAAX,EAAoBK,KAApB,CAAb,EAAyC,CAAE;AAAEH,cAAQ,EAAV;AAAcC,eAAS,KAAvB;AAA8BC,YAAM;AAApC,KAAF,CAAzC;AACAN,OAAGG,GAAH;AACD,GAJD;AAKD,CAxBD","file":"smart_contracts/solc-js/test/abi.js.map","sourcesContent":["const tape = require('tape');\nconst abi = require('../abi.js');\n\ntape('ABI translator', function (t) {\n  t.test('Empty ABI', function (st) {\n    st.deepEqual(abi.update('0.4.0', []), []);\n    st.end();\n  });\n  t.test('0.1.1 (no constructor)', function (st) {\n    st.deepEqual(abi.update('0.1.1', []), [ { inputs: [], payable: true, type: 'constructor' }, { payable: true, type: 'fallback' } ]);\n    st.end();\n  });\n  t.test('0.4.0 (has fallback)', function (st) {\n    var input = [ { inputs: [], type: 'constructor' } ];\n    st.deepEqual(abi.update('0.4.0', input), [ { inputs: [], payable: true, type: 'constructor' } ]);\n    st.end();\n  });\n  t.test('0.4.1 (constructor not payable)', function (st) {\n    var input = [ { inputs: [], payable: false, type: 'constructor' } ];\n    st.deepEqual(abi.update('0.4.1', input), [ { inputs: [], payable: true, type: 'constructor' } ]);\n    st.end();\n  });\n  t.test('0.4.5 (constructor payable)', function (st) {\n    var input = [ { inputs: [], payable: false, type: 'constructor' } ];\n    st.deepEqual(abi.update('0.4.5', input), [ { inputs: [], payable: false, type: 'constructor' } ]);\n    st.end();\n  });\n});\n"]},"hash":"1cdbfa2b3381b14364d52e837082635fcb496f80"}
